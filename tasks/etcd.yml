---
# install and configure etcd

  - name: stat etcd
    stat: path=/usr/bin/etcd
    register: etcd_bin

  - name: create etcd temp dir
    local_action: "file path={{ etcd_temp_dir }} state=directory"
    run_once: true
    when: not etcd_bin.stat.exists

  - name: download etcd
    local_action: "get_url url={{ etcd_bin_url }} dest={{ etcd_temp_dir }}/etcd.tar.gz force=no"
    run_once: true
    when: not etcd_bin.stat.exists

  - name: unarchive
    local_action: "unarchive src={{ etcd_temp_dir }}/etcd.tar.gz dest={{ etcd_temp_dir }}"
    run_once: true
    when: not etcd_bin.stat.exists

  - name: copy etcd bins
    copy: "src={{ etcd_temp_dir }}/etcd-v{{ etcd_version }}-linux-amd64/etcd dest=/usr/bin/etcd mode=0755"
    when: not etcd_bin.stat.exists
    become: true

  - name: copy etcd bins
    copy: "src={{ etcd_temp_dir }}/etcd-v{{ etcd_version }}-linux-amd64/etcdctl dest=/usr/bin/etcdctl mode=0755"
    when: not etcd_bin.stat.exists
    become: true

  - name: create etcd group
    group: "name={{ etcd_user }} state=present gid={{ etcd_pid }}"
    become: true

  - name: create etcd user
    user: "name={{ etcd_user }} comment='etcd service user' uid={{ etcd_pid }} group={{ etcd_user }} createhome=no"
    become: true

  - name: etcd conf dir
    file: "path={{ etcd_conf_dir }} state=directory"
    become: true

  - name: create etcd data dir
    file: "path={{ etcd_data_dir }} state=directory owner={{ etcd_user }} group={{ etcd_user }}"
    become: true

  - name: copy flanneld network config
    template: src=flanneld/flannel-config.json.j2 dest=/etc/etcd/flannel-config.json
    become: true

  - name: etcd config
    copy: "src=etcd/etcd.env dest={{ etcd_env_file }}"
    notify: etcd restart
    become: true

  - name: etcd systemd conf
    template: src=etcd/etcd.service.j2 dest=/etc/systemd/system/etcd.service mode=644
    become: true
    notify:
        - systemd reload
        - etcd restart

  - name: start etcd
    service: name=etcd state=started enabled=yes
    become: true

